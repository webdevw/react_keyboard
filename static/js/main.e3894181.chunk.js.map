{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyupHandler","event","setState","key","document","addEventListener","this","removeEventListener","pressed","length","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,WAAYE,EAAME,OAfxB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WACFS,EAAgC,IAAtBT,EAAWU,OAE3B,OACE,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIF,EAEI,0BAFG,mCAIyBT,EAJzB,aA3BnB,GAAyBY,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.e3894181.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyupHandler);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keyupHandler);\n  }\n\n  keyupHandler = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    const pressed = pressedKey.length === 0;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            pressed\n              ? (\n                'Nothing was pressed yet'\n              ) : (\n                `The last pressed key is [${pressedKey}]`\n              )\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}